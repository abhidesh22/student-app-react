{"version":3,"sources":["homePage/studentapp.jpg","homePage/Home.js","homePage/AboutPage.js","students/StudentList.js","homePage/NotFoundPage.js","NavBar.js","students/StudentEdit.js","App.js","reportWebVitals.js","index.js"],"names":["Home","src","studentappImage","alt","AboutPage","StudentList","useState","name","_id","course","type","grade","rollno","url","degreeEnrolled","address","city","zipcode","students","setStudents","tableLoaded","setTableLoaded","showChart","setShowChart","chartData","setChartData","selectedUni","setSelectedUni","universities","setUniversities","error","setError","loading","setLoading","isMounted","useRef","ChartJS","register","registerables","CategoryScale","LinearScale","PointElement","LineElement","Title","Tools","Legend","dt","useEffect","current","fetch","then","results","json","data","response","message","header","className","Button","onClick","exportCSV","selectionOnly","doc","jsPDF","content","startY","head","body","map","elt","autoTable","save","handleDelete","student","a","console","log","config","headers","axios","delete","loadStudentData","university","labels","course_name","datasets","label","averageGrade","backgroundColor","color","value","options","onChange","e","event","optionLabel","filter","showClear","filterBy","placeholder","itemTemplate","option","valueTemplate","props","variant","element","document","getElementById","html2canvas","canvas","imgData","toDataURL","text","addImage","downloadPdf","id","plugins","title","display","legend","position","target","ref","responsiveLayout","dataKey","progressPending","pagination","field","rowData","NotFoundPage","NavBar","user","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","StudentEdit","details","setDetails","currentUser","setCurrentUser","navigate","useNavigate","React","params","useParams","loggedUser","localStorage","getItem","JSON","parse","username","updateStudent","put","Form","onSubmit","preventDefault","Group","controlId","Label","Control","as","App","setUser","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ad05afe1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/studentapp.30cd8648.jpg\";","import React from 'react';\r\nimport studentappImage from './studentapp.jpg';\r\nconst Home = () => (\r\n    <>\r\n    <h1>Hello, welcome to The Student Info app</h1>\r\n    <img src ={studentappImage} alt=\"studentapp\" />\r\n    <p>\r\n        Welcome to my Student info App!!!\r\n        Hop on to the About page to view more information.\r\n    </p>\r\n    </>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst AboutPage = () => (\r\n    <>\r\n    <h1>About this App</h1>\r\n    <p>\r\n        This Site is a test Student App. <br/>\r\n        Select the Student Info Page and select university to get information about students and generate reports. <br/>\r\n        You can edit or delete students into the university as well <br/>\r\n        Create new students for universities <br/>\r\n    </p>\r\n\r\n    </>\r\n);\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport {useState, useEffect, useRef } from 'react';\r\nimport { Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Tooltip } from 'primereact/tooltip';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable';\r\nimport { FaFileCsv, FaFilePdf } from \"react-icons/fa\";\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip as Tools,\r\n    Legend,\r\n    registerables\r\n  } from 'chart.js'\r\n  \r\n\r\nfunction StudentList () {\r\n    const [students, setStudents] = useState([\r\n        {\r\n            name: \"\",\r\n            _id: \"\",\r\n            course: {\r\n                name: \"\",\r\n                type: \"\"\r\n            },\r\n            grade: 0,\r\n            rollno: 0,\r\n            url: \"\",\r\n            degreeEnrolled: \"\",\r\n            address: {\r\n                city: \"\",\r\n                zipcode: \"\"\r\n            }\r\n        }\r\n    ]);\r\n    \r\n    const [tableLoaded, setTableLoaded] = useState(false);\r\n    const [showChart, setShowChart] = useState(false);\r\n    const [chartData, setChartData] = useState(false);\r\n    const [selectedUni, setSelectedUni] = useState({});\r\n    const [universities, setUniversities] = useState([{name: \"\", _id: \"\"}]);\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const isMounted = useRef(true);\r\n\r\n    ChartJS.register(...registerables);\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        LinearScale,\r\n        PointElement,\r\n        LineElement,\r\n        Title,\r\n        Tools,\r\n        Legend\r\n    )\r\n    const dt = useRef(null);\r\n\r\n    useEffect(() => {\r\n        isMounted.current = true;\r\n\r\n        fetch('/api/uni')\r\n        .then(results => results.json())\r\n        .then(data => {\r\n            setUniversities(data);\r\n        },\r\n        (error) => {\r\n            setError(error.response.data.message);\r\n        });\r\n\r\n        return () => {\r\n            isMounted.current = false;\r\n        };\r\n\r\n    },[ students ]);\r\n\r\n\r\n\r\n    const exportCSV = (selectionOnly) => {\r\n        dt.current.exportCSV();\r\n    }\r\n\r\n    const exportPdf= (selectionOnly) => {\r\n        const doc = new jsPDF('l', 'mm',[210, 297]);\r\n        const headers = [[\"Student ID\", \"Name\", \"Grade\", \"Subject\"]];\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: students.map(elt=> [elt.rollno, elt.name, elt.grade, elt.course.name])\r\n          };\r\n        doc.autoTable(content);\r\n        doc.save('studentList.pdf');\r\n\r\n    }\r\n\r\n    const header = (\r\n        <div className=\"flex align-items-center export-buttons\">\r\n            <Button type=\"button\" onClick={() => exportCSV(true)} className=\"mr-2\" data-pr-tooltip=\"CSV\" >\r\n                <FaFileCsv />\r\n            </Button>\r\n            <Button type=\"button\" onClick={exportPdf} className=\"p-button-warning mr-2\" data-pr-tooltip=\"PDF\" >\r\n                <FaFilePdf />\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n    const selectedUniversityTemplate = (option, props) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"uni-item uni-item-value\">\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n    \r\n        return (\r\n            <span>\r\n                {props.placeholder}\r\n            </span>\r\n        );\r\n    }\r\n    \r\n    const universityOptionTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n    const downloadPdf = () => {\r\n        var doc = new jsPDF('l', 'mm',[210, 297]);\r\n        const element = document.getElementById(\"newChart\");\r\n        html2canvas(element).then(canvas => {\r\n            var imgData = canvas.toDataURL('image/png',1.0);                  \r\n            doc.text(130,15,` Student Report for ${selectedUni.name}`);\r\n            doc.addImage(imgData, 'PNG',20,30,0,130); \r\n            const headers = [[\"Student ID\", \"Name\", \"Grade\", \"Subject\"]];\r\n            let content = {\r\n                startY: 450,\r\n                head: headers,\r\n                body: students.map(elt=> [elt.rollno, elt.name, elt.grade, elt.course.name])\r\n              };\r\n            doc.autoTable(content);\r\n            doc.save('gt_log.pdf');             \r\n        })\r\n    }\r\n\r\n    const handleDelete = async (student) => {\r\n        console.log(student);\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n                },\r\n              };\r\n            await axios.delete(\r\n                `/api/student/${student.rollno}`,\r\n                config\r\n            );\r\n        } catch (error) {\r\n            setError(\"Not able to delete Student at the moment\");\r\n        }\r\n        loadStudentData(selectedUni);\r\n    }\r\n\r\n    const loadStudentData = (university) => {\r\n        \r\n        if(university) {\r\n            setTableLoaded(true);\r\n            setLoading(true);\r\n            fetch(`/api/student/byuni/${university._id}`)\r\n            .then(results => results.json())\r\n            .then(data => {\r\n              setStudents(data);\r\n              setLoading(false);\r\n            },\r\n            (error) => {\r\n                setError(error.response.data.message);\r\n            });\r\n\r\n            fetch(`/api/student/bysubject/${university._id}`)\r\n            .then(results => results.json())\r\n            .then(data => {\r\n                console.log(data);\r\n              setChartData({\r\n                labels: data.map((student) => student.course_name[0]),\r\n                datasets: [\r\n                  {\r\n                    label: \"Average Grades\",\r\n                    data: data.map((student) => student.averageGrade),\r\n                    backgroundColor: [\r\n                      \"#2a71d0\"\r\n                    ]\r\n                  }\r\n                ]\r\n              });\r\n            },\r\n            (error) => {\r\n                setError(error.response.data.message);\r\n            });     \r\n        } else {\r\n            setTableLoaded(false);\r\n        }\r\n    } \r\n    const handleUniSelect = (event) => {\r\n        setSelectedUni(event.value);\r\n        loadStudentData(event.value);\r\n    }\r\n    const deleteBodyTemplate = (rowData) => {\r\n        return <Button variant=\"primary\" onClick={() => handleDelete(rowData)} > Delete </Button>;\r\n    }\r\n    return (\r\n    <>\r\n    {error ? <h2 color='red'> Error fetching the records currently, please try again later </h2> : null}\r\n    <h2>Select University</h2>\r\n    <Dropdown\r\n        value={selectedUni} \r\n        options={universities} \r\n        onChange={(e) => handleUniSelect(e)} \r\n        optionLabel=\"name\" \r\n        filter\r\n        showClear\r\n        filterBy=\"name\"\r\n        placeholder=\"Select a University\"\r\n        itemTemplate={universityOptionTemplate}\r\n        valueTemplate={selectedUniversityTemplate}\r\n    />\r\n    \r\n    {!tableLoaded || loading ? \r\n        loading ? \r\n        <div>\r\n            <h1> Loading Data, Please wait.. </h1> \r\n        </div>\r\n        :\r\n        <div>\r\n            <h1> Select University to Get Student List</h1> \r\n        </div>        \r\n        : \r\n        showChart ? \r\n        <div>\r\n            <h1> Average Grades by Courses </h1> \r\n            <Button variant=\"primary\" onClick={() => setShowChart(false)} > Back to Table Mode </Button>\r\n            <Button variant=\"primary\" onClick={() => downloadPdf()} > Download Pdf Report </Button>\r\n            <div>\r\n                <Bar id=\"newChart\"\r\n                    data={chartData}\r\n                    options={{\r\n                    plugins: {\r\n                        title: {\r\n                        display: true,\r\n                        text: `Average Grades per course for university ${selectedUni.name}`\r\n                        },\r\n                        legend: {\r\n                        display: true,\r\n                        position: \"bottom\"\r\n                    }\r\n                    }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        :\r\n        <div className=\"card\">\r\n            <Tooltip target=\".export-buttons>button\" position=\"bottom\" />\r\n            <div>\r\n                <Button variant=\"primary\" onClick={() => setShowChart(true)} > Switch to Graph Mode </Button>\r\n                <div className=\"card\" >\r\n                    <DataTable \r\n                        ref={dt} \r\n                        value={students} \r\n                        responsiveLayout=\"scroll\" \r\n                        header={header} \r\n                        dataKey=\"id\" \r\n                        progressPending={loading} \r\n                        pagination\r\n                        >\r\n                        <Column field=\"rollno\" header=\"Student ID\"></Column>\r\n                        <Column field=\"name\" header=\"Name\"></Column>\r\n                        <Column field=\"grade\" header=\"Grade\"></Column>\r\n                        <Column field=\"course.name\" header=\"Subject\"></Column>\r\n                        <Column header=\"Delete?\" body={deleteBodyTemplate}></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n    </>\r\n)};\r\n\r\nexport default StudentList;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport {Navbar, Container, Nav } from 'react-bootstrap';\r\n// @desc    Navigation module to show all options for users\r\n\r\nconst NavBar = ({user}) => (\r\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n    <Container>\r\n        <Navbar.Brand href=\"/\">Student App</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n                <Nav.Link href=\"/\">Home</Nav.Link>\r\n                <Nav.Link href=\"/about\">About</Nav.Link>\r\n                <Nav.Link href=\"/studentlist\">Student Info</Nav.Link>\r\n                <Nav.Link href=\"/universitiesList\">Universities</Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Container>\r\n    </Navbar>\r\n);\r\n\r\nexport default NavBar;","import React, {useState, useEffect} from 'react';\r\nimport {Form, Button } from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst StudentEdit = () => {\r\n    const [details, setDetails] = useState({name:\"\", grade: 0});\r\n    const [currentUser, setCurrentUser] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    let navigate = useNavigate();\r\n    const isMounted = React.useRef(true);\r\n    const params = useParams();\r\n    useEffect(() => {\r\n\r\n        if (isMounted.current) {\r\n            fetch(`/api/student/${params.rollno}`)\r\n            .then(results => results.json())\r\n            .then(data => {\r\n              setDetails({name:data[0].name, grade: data[0].grade});\r\n            },\r\n            (error) => {\r\n                setError(\"Error in retrieving the student details\");\r\n            });\r\n            const loggedUser = localStorage.getItem('loggedUser');\r\n            if(loggedUser) {\r\n                setCurrentUser(JSON.parse(loggedUser).username);\r\n            }\r\n        }\r\n        return () => {\r\n            isMounted.current = false;\r\n        };\r\n\r\n    },[ details, params.rollno ]);\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if(currentUser) updateStudent(details);\r\n    }\r\n    const updateStudent = async (details) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n                },\r\n              };\r\n\r\n            await axios.put(\r\n                `/api/student/${params.rollno}`,\r\n                { name: details.name, grade: details.grade },\r\n                config\r\n            );\r\n\r\n        } catch (error) {\r\n            setError(\"Not able to edit Student at the moment\");\r\n        }\r\n        \r\n        navigate(\"/studentlist\");\r\n    }\r\n    return (\r\n    <>\r\n    <div>\r\n    <Form onSubmit={submitHandler}>\r\n        <h2>Edit Student </h2>\r\n        {error ? <h1> {error} </h1> : null}\r\n        <Form.Group controlId=\"formBasicText\">\r\n            <Form.Label>Student Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter name\" onChange={event => setDetails({...details, name: event.target.value})} value={details.name}/>\r\n        </Form.Group>\r\n\r\n        <Form.Label><strong>{details.grade}</strong></Form.Label>\r\n\r\n        <Form.Group controlId=\"formBasicText\">\r\n            <Form.Label>Student grade</Form.Label>\r\n            <Form.Control as=\"text\" placeholder=\"Enter student grade\" onChange={event => setDetails({...details, grade: event.target.value})} value={details.grade}/>\r\n        </Form.Group>\r\n        \r\n        <Button variant=\"primary\" type=\"submit\" >\r\n            Update Student\r\n        </Button>\r\n\r\n    </Form>\r\n    </div>\r\n    </>\r\n);\r\n}\r\n\r\nexport default StudentEdit;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes\r\n} from 'react-router-dom';\r\nimport Home from './homePage/Home';\r\nimport AboutPage from './homePage/AboutPage';\r\nimport StudentList from './students/StudentList';\r\nimport NotFoundPage from './homePage/NotFoundPage';\r\nimport NavBar from './NavBar';\r\nimport './App.css';\r\nimport StudentEdit from './students/StudentEdit';\r\n\r\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";  //theme\r\nimport \"primereact/resources/primereact.min.css\";                  //core css\r\nimport \"primeicons/primeicons.css\";                                //icons\r\n\r\nfunction App( ) {\r\n\r\n    const [user, setUser] = useState(\"\");\r\n\r\n    // @desc    Get the current logged in user from the local storage\r\n    useEffect(() => {\r\n      const loggedUser = localStorage.getItem('loggedUser');\r\n      if (loggedUser) {\r\n        setUser(JSON.parse(loggedUser).username)\r\n      }\r\n    },[]);\r\n\r\n    // @desc    login hook - checks if its a registration request to avoid showing the login form for new registration\r\n    //          also, sets the loggedin user details in the local storage\r\n\r\n    return (\r\n      <div className=\"App\">\r\n          <Router>        \r\n            <NavBar user={user}/>\r\n            <div id=\"page-body\">\r\n              <Routes>\r\n                <Route path=\"/\" element={ <Home /> } exact />\r\n                <Route path=\"/about\" element={ <AboutPage /> } />\r\n                <Route path=\"/studentlist\" element={ <StudentList /> }  />\r\n                <Route path=\"/editstudent/:id\" element={ <StudentEdit />} />;\r\n                <Route path=\"/home\" element={ <Home /> } />\r\n                <Route path=\"*\" element = {<NotFoundPage /> } />\r\n              </Routes>\r\n            </div>\r\n          </Router>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";  //theme\r\nimport \"primereact/resources/primereact.min.css\";                  //core css\r\nimport \"primeicons/primeicons.css\";                                //icons\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}